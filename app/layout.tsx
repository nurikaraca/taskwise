
// import type { Metadata } from "next";
// import localFont from "next/font/local";
// import "./globals.css";
// import Navbar from "@/components/Navbar";

// import { auth } from "@/auth";

// import {
//   useQuery,
//   useMutation,
//   useQueryClient,
//   QueryClient,
//   QueryClientProvider,
// } from '@tanstack/react-query'
// import { ReactQueryClientProvider } from "@/components/ReactQueryClientProvider";
// import AuthProvider from "@/utils/providers/AuthProvider";
// import Providers from "./context/Providers";
// import { Toaster } from "@/components/ui/toaster"

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default async function RootLayout({

//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   const session = await auth();


//   return (
//     <AuthProvider>
//       <ReactQueryClientProvider>
//         <html lang="en" suppressHydrationWarning>
//           <body className={`${geistSans.variable} ${geistMono.variable} antialiased relative`}>
//           <div
//               className="absolute inset-0 -z-10 bg-[url('/bg-photo.jpg')] bg-cover bg-center blur-xl"
//               aria-hidden="true"
//             ></div>
//             <Providers>
//               <div className=" ">
//                 <nav className="h-[4rem] flex ">
//                   <Navbar />
//                 </nav>
//                 <main className="h-[calc(100vh-4rem)] w-full ">{children}</main>
//                 <Toaster />
//               </div>
//             </Providers>
//           </body>
//         </html>
//       </ReactQueryClientProvider>
//     </AuthProvider>
//   );
// }




import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import Navbar from "@/components/Navbar";

import { auth } from "@/auth";

import {
  useQuery,
  useMutation,
  useQueryClient,
  QueryClient,
  QueryClientProvider,
} from '@tanstack/react-query'
import { ReactQueryClientProvider } from "@/components/ReactQueryClientProvider";
import AuthProvider from "@/utils/providers/AuthProvider";
import Providers from "./context/Providers";
import { Toaster } from "@/components/ui/toaster"

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await auth();

  return (
    <AuthProvider>
      <ReactQueryClientProvider>
        <html lang="en" suppressHydrationWarning>
          {/* Arka plan ve fontlar */}
          <body
            className={`${geistSans.variable} ${geistMono.variable} antialiased bg-[url('/b.jpg')] bg-cover bg-center bg-fixed`}
          >
            
            <Providers>
              <div className="mycontainer w-[94%]  h-[45rem] ">
                <nav className="h-[4rem] flex  ">
                  <Navbar />
                </nav>
                
                <main className=" ">{children}</main>

                
                <Toaster />
              </div>
            </Providers>
          </body>
        </html>
      </ReactQueryClientProvider>
    </AuthProvider>
  );
}

