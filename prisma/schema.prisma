datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}
model User {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  fullname        String?
  email           String         @unique
  image           String?
  password        String
  groups          GroupMember[]
  groupsCreated   Group[]        @relation("UserGroupsCreated") // Kullanıcının oluşturduğu gruplar
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}

model Group {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  description     String?
  createdById     String         @db.ObjectId  // Grubu oluşturan öğretmen
  createdBy       User           @relation("UserGroupsCreated", fields: [createdById], references: [id]) // User modelinde groupsCreated alanı ile eşleşen ilişki
  members         GroupMember[]
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}

model GroupMember {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  groupId         String         @db.ObjectId
  userId          String         @db.ObjectId
  group           Group          @relation(fields: [groupId], references: [id])
  user            User           @relation(fields: [userId], references: [id])
  isAdmin         Boolean        @default(false)  // Kullanıcının admin olup olmadığını belirtir
  joinedAt        DateTime       @default(now())
}